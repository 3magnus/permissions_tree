<?php
/**
 * @file
 * Code for the ...
 * on demand to save memory consumption during normal site operation.
 */

/**
 * Adds the menu tab for its page.
 */
function permissions_tree_menu() {
    $items['admin/people/permissions/tree'] = array(
      'title' => 'Tree',
      'description' => 'Tree view by role of all enabled permissions.',
      'page callback' => 'permissions_tree_page',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
   );  
   return $items;
}


/**
 * Implements the tree view by user.
 */
function permissions_tree_page() {
   $output = array();
	// get array of roles names
   $result = db_select('role', 'r')
      ->fields('r', array('rid', 'name', 'weight'))
      ->orderBy('weight', 'ASC')
      ->execute();
   while ($record = $result->fetchAssoc()) {
   	$roles[$record['rid']] = $record['name'];
   	$output[$record['rid']] = array(); 
   }
   $roles_count = count($roles);
   // gather all permissions ordered
   $result = db_select('role_permission', 'rp')
      ->fields('rp', array('rid', 'permission', 'module'))
      ->orderBy('rid', 'ASC')
      ->orderBy('module', 'ASC')
      ->execute();
   $last = array('rid'=>-1, 'permission'=>'', 'module'=>'');
   $num = 0;
   while ($record = $result->fetchAssoc()) {
   	$num++;
   	if ($record['rid'] != $last['rid']) {
    	   $last['module'] = '';
      }
      if ($record['module'] != $last['module']) {
      	//$modules[] = $record['module'];
			if (!isset($output[$record['rid']][$record['module']])) {
       	   $output[$record['rid']][$record['module']] = '';
       	}
      }
     	// avoids duplicated permissions from inheritance
     	$tempout = trim(strip_tags(_form_html_element('item', $num, $record)));
     	if (strpos($output[$record['rid']][$record['module']], $tempout) === FALSE) {
     	   $output[$record['rid']][$record['module']] .= _form_html_element('item', $num, $record);
     	}
     	// extends permissions from 'authenticated user' to other roles that are not anonymous
     	if ($record['rid'] == 2 && $roles_count > 2) {
     		foreach ($roles as $k=>$v) {
     			if ($k > 2) {
     				$tempout = _form_html_element('item', $num, array('rid'=>$k, 'permission'=>$record['permission'], 'module'=>$record['module']));
     				if (isset($output[$k][$record['module']])) {
     			      $output[$k][$record['module']] .= str_replace('<label', '<label class="inherited"', $tempout);
     			   }
     			   else {
     			   	$output[$k][$record['module']] = str_replace('<label', '<label class="inherited"', $tempout);
     			   }
     			}
         }
     	}
   	$last = $record;
   }
   
   foreach ($output as $rid=>$module) {
      $pagearr[$rid]['fieldset-open'] = array(
         '#markup' => '<fieldset class="collapsible form-wrapper role"><legend><span class="fieldset-legend"><a class="fieldset-title" href="#"><span class="fieldset-legend-prefix element-invisible">Hide</span> '.$roles[$rid].'</a><span class="summary"></span></span></legend><div class="fieldset-wrapper" style="">',
      );
      foreach ($module as $name=>$items) {
      	$itemsarr = explode('<div><input', $items);
   	   $num = count($itemsarr)-1;
         $pagearr[$rid][$name] = array(
            'fieldset' => array(
               '#type' => 'fieldset',
               '#title' => $name.' ('.$num.')',
               '#attributes' => array('class' => array('collapsible', 'collapsed', 'module')),
               'content' => array(
                  '#markup' => $items,
               ),
            ),
         );
      }
      $pagearr[$rid]['fieldset-close'] = array(
         '#markup' => '</div></fieldset>',
      );
   }
   $pagearr['options'] = array(
      '#markup' => '',
      '#attached' => array(
         'js' => array(
            'misc/collapse.js',
            'misc/form.js',
         ),
         'css' => array(
            drupal_get_path('module', 'permissions_tree').'/permissions_tree.css',
         ),
      ),
   );
   return $pagearr;  
}


/**
 * Helper function.
 */
function _form_html_element($element, $number, $row) {
   switch($element) {
   	case 'item':
         $markup = ' <div><input disabled="disabled" id="'.$row['module'].'-'.$row['rid'].'-permission-'.$number.'" name="modules['.$row['rid'].']['.$row['module'].']['.$number.'][enable]" value="1" checked="checked" class="form-checkbox" type="checkbox"><label for="'.$row['module'].'-'.$row['rid'].'-permission-'.$number.'">'.$row['permission'].'</label></div>';
      break;
   }
   return $markup;
}
